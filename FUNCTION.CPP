#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <dos.h>
#include <string.h>
#include <time.h>
#include <bios.h>
#include "CODES.cpp" /* В данной файле содержатся все функции,
		     непостредственно связанные с кодами Морзе */
//
//
// Тренировка
void Practice ()
{
 while (1)
 {
   char k [20];
   int n, i, ln;
   clrscr ();
   //
   printf ("\n\t\t\t\tТРЕНИРОВКА\n\n");
   printf ("\t\tДанный раздел предназначен для освоения азбуки Морзе.\n\t\tВы вводите любую совокупность символов, нажимаете Enter \n\t\t    и прослушиваете её звуковой эквивалент.\n\t\t\tДля выхода в главное меню введите '/' \n\n");
   printf ("\tВыберете скорость воспроизведения сиволов:\n");
   printf ("\t\t0 - низкая скорость\n\t\t1 - нормальная скорость\n\t\t");
   do      // Выбираем скорость
    {
      ln = getch ()-48;
    }
   while (ln!=0&&ln!=1);
   //
   switch (ln)
   {
     case 0: printf ("\n\tВы выбрали низкую скорость"); break;
     case 1: printf ("\n\tВы выбрали нормальную скорость"); break;
     default: break;
   }
   printf ("\n\tВведите символ / символы:\n\n");
   //
   do
   {
     gets (k);
     n = strlen(k);
     for (i=0; i<n; i++)
     {
       shifr (k[i]);       // Печатаем и воспроизводим символы
       morse (k[i], ln);
     }
     printf ("\n");
   }
   while (*k!='/');
   break;
 } // while (1)
}
//
//_____________________________________________________________
//
// Кодирование текстовой информации
void Code ()
{
  while (1)
  {
    char k;
    FILE *in;
    char str [20][80];
    int n, i=0, im;
    clrscr ();
    in = fopen ("KURS.txt", "r");
    //
    printf ("\n\t\t\tКОДИРОВАНИЕ ТЕКСТОВОЙ ИНФОРМАЦИИ\n\n");
    printf ("\tВ этом разделе вы прослушаете кодировку азбуки Морзе для текста,\n\t\t\tзаписанного в файл KURS.txt\n\n");
    while (!feof(in))        // Читаем из файла
    {
      fgets (str[i],80,in);
      puts (str[i]);
      i++;
    }
    im=i;
    printf("\n");
    for (i=0; i<im; i++)      // А здесь - воспроизведение
    {
      n = strlen (str[i]);
      for (int j=0; j<n; j++)
      {
	printf ("%c ", str[i][j]);
	shifr (str[i][j]);
	morse (str[i][j],1);  // воспроизводим посимвольно
      }
    }
   //
   //
   printf ("\n\n\tДля выхода в главное меню нажмите '/'\n\t");
   do
    {
      k = getch ();
    }
    while (k!='/');
    break;
  }  // while (1)
  return;
}
//
//______________________________________________________________________
//
// Проверка усвоенных знаний
void Verification ()
{
  while (1)
  {
    float m=0, vm=0;
    int ln, n;
    char k;
    float res=0;
    // в массив помещаем все возможные символы (кроме знаков препинания)
    char a [] = {'а','б','в','г','д','е','ж','з','и','й','к','л','м','н',
		 'о','п','р','с','т','у','ф','х','ц','ч','ш','щ','ы','ь',
		 'э','ю','я','0','1','2','3','4','5','6','7','8','9'};
    n = strlen (a);
    clrscr ();
    randomize ();
    //
    printf ("\n\t\t\t\t ПРОВЕРКА ЗНАНИЙ\n\n");
    printf ("\tДанный раздел предназначен для проверки полученных знаний\n");
    printf ("\t  Перейдите, пожалуйста, на русский язык, так как символы\n\t\t будут передаваться именно на нем\n");
    printf ("\t   Ваша задача - за одну минуту различить на слух \n\t\tнаибольшее количество символов\n");
    printf ("\tВы можете выбрать один из уровней сложности:\n");
    printf ("\t\t0 - низкая скорость\n\t\t1 - нормальная скорость\n\t\t");
    //
    do      // Выбираем скорость
    {
      ln = getch () - 48;
    }
    while (ln!=0&&ln!=1);
    //
    switch (ln)
    {
     case 0: printf ("\n\tВы выбрали низкую скорость"); break;
     case 1: printf ("\n\tВы выбрали нормальную скорость"); break;
     default: break;
    }
    printf ("\tДля начала нажмите Enter!");
    while (getch()!=13); // Ждем нажатие Enter
    //
/* далее идет функция, позволяющая вести обратный отсчет одной
минуты с воспроизведением звуков азбуки Морзе */
//
  char l;
  long b, b0, b1;
  b0 = b = biostime (0, 0L);  // считали системное время
  b1 = b;
  int i = random (n); // генератор случайных чисел
  //
  //
  while ( ((b1-b)/CLK_TCK) < 60 )   // пока не прошла минута
  {
    morse (a[i], ln);
    vm++;  // сколько всего символов воспроизвели
		 // b1=b / CLK_TCK;  - b1 в секундах (делим на тики)
    do
    {
      while (!kbhit()&&((b1-b)/ CLK_TCK < 60))
      {
	 b1 = biostime (0, 0L);
	 if ((b1-b0)/CLK_TCK>0.1)
	 {
	   b0 = b1;
	   gotoxy (75, 15);
	   printf ("%.1f", (b1-b) / CLK_TCK); // печатаем секунды
	 }
      } // while (!kbhit()&&((b1-b)/ CLK_TCK < 60))
      if (kbhit())
      {
	l = getch ();
	b1 = biostime (0, 0L);
	if ((b1-b0)/CLK_TCK>0.1)
	{
	  b0 = b1;
	  gotoxy (75, 15);
	  printf ("%.1f", (b1-b) / CLK_TCK); // печатаем секунды
	}
      } //if (kbhit())
    } //do
    while (!(l>='а'&&l<='я'||l>='0'&&l<='9'||l==27)&&((b1-b)/CLK_TCK<60));
    //
    gotoxy (9,15);
    printf ("Ваш ответ: %c\n\tПравильный ответ: %c  ", l, a[i]);
    if (l==a[i]) {printf ("\t\t  ВЕРНО!\n"); m++; }  // сколько правильных ответов
    else printf ("\t\tНЕВЕРНО!\n");
    if (l==27) break;   // для выхода
    i = random (n);  // занова выбираем любое число
   } //while ( ((b1-b)/CLK_TCK) < 60 )
    //
    //
    printf ("\n\tПравильных ответов - %.0f из %.0f\n", m, vm);
    res=(m/vm);
    if (res==0) printf ("\n\tВы уверены, что перешли на русскую раскладку?\n\tРазработичику не верится, что вы не дали ни одного верного ответа!");
    if (res==1) printf ("\n\tПоздравляем! Вы абсолютно точно отгадали все символы!\n\t\tНе думали о карьере в разведке? :)");
    //
    if (res<1&&res>0.75) printf ("\n\tУ Вас потрясающие результаты,\n\tи в скором времени Вы, безусловно, покажете 100% успеха!");
    if (res<=0.75&&res>0.4) printf ("\n\tВашим результатам можно позавидовать!\n\tЗнание азбуки Морзе вполне может Вам пригодиться");
    if (res<=0.4&&res>0) printf ("\n\tДа уж, Вам пока рановато вступать в ряды связистов!\n\tНо с помощью этой программы Вы улучшите свое знание азбуки Морзе");
    //
    printf ("\n\n\tДля выхода в главное меню нажмите '/'\n\t");
    do
    {
      k = getch ();
    }
    while (k!='/');
    break;
  }  // while (1)
  return;
}

